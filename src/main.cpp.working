#include <WiFi.h>
#include <AsyncTCP.h>
#include <WiFiManager.h>
#include "SoftwareSerial.h"
#include "config.h"

AsyncServer *server = nullptr;
AsyncClient *client = nullptr;  // Use AsyncClient instead of WiFiClient
EspSoftwareSerial::UART RS485Port;

// Setup WiFi connection
void setupWifi() {
  WiFiManager wm;
  wm.autoConnect("ESP32_RS485_Bridge"); // Adjust the SSID as needed
}

// Read data from RS485 and send it to the connected PC client
void readRS485() {
  if (client && client->connected()) {
    String rs485Data = "";
    while (RS485Port.available() > 0) {
      rs485Data += (char)RS485Port.read();
    }
    if (rs485Data.length() > 0) {
      client->write(rs485Data.c_str(), rs485Data.length());
    }
  }
}

// Callback for when data is received from the PC client
void onClientData(void *arg, AsyncClient *tcpClient, void *data, size_t len) {
  if (tcpClient && tcpClient->connected()) {
    RS485Port.write((uint8_t*)data, len); // Send the data from the PC to RS485
  }
}

void setup() {
  Serial.begin(115200);
  setupWifi();

  // Initialize RS485 serial interface
  RS485Port.begin(RS485_BAUD, RS485_OPTIONS, D4, D3, false);

  // Set up TCP server
  server = new AsyncServer(12345); // Listen on port 12345
  server->onClient([](void *arg, AsyncClient *tcpClient) {
    client = tcpClient; // Store the client connection
    client->onData(onClientData, nullptr); // Relay data from PC to RS485
  }, nullptr);
  server->begin();
}

void loop() {
  // Continuously read from RS485 and relay to the PC client
  readRS485();
}
